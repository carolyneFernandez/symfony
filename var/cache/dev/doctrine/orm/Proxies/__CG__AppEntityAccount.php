<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Account extends \App\Entity\Account implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'iban', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'balance', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'owner', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'creditTransaction', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'debitTransaction', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'people', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'mountDebit', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'carte'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'iban', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'balance', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'owner', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'creditTransaction', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'debitTransaction', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'people', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'mountDebit', '' . "\0" . 'App\\Entity\\Account' . "\0" . 'carte'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Account $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIban(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIban', []);

        return parent::getIban();
    }

    /**
     * {@inheritDoc}
     */
    public function setIban(string $iban): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIban', [$iban]);

        return parent::setIban($iban);
    }

    /**
     * {@inheritDoc}
     */
    public function getBalance(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBalance', []);

        return parent::getBalance();
    }

    /**
     * {@inheritDoc}
     */
    public function setBalance(int $balance): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBalance', [$balance]);

        return parent::setBalance($balance);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner(): ?\App\Entity\Person
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(?\App\Entity\Person $owner): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditTransaction(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditTransaction', []);

        return parent::getCreditTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function addCreditTransaction(\App\Entity\Transaction $creditTransaction): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCreditTransaction', [$creditTransaction]);

        return parent::addCreditTransaction($creditTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCreditTransaction(\App\Entity\Transaction $creditTransaction): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCreditTransaction', [$creditTransaction]);

        return parent::removeCreditTransaction($creditTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getDebitTransaction(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDebitTransaction', []);

        return parent::getDebitTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function addDebitTransaction(\App\Entity\Transaction $debitTransaction): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDebitTransaction', [$debitTransaction]);

        return parent::addDebitTransaction($debitTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDebitTransaction(\App\Entity\Transaction $debitTransaction): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDebitTransaction', [$debitTransaction]);

        return parent::removeDebitTransaction($debitTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeople(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeople', []);

        return parent::getPeople();
    }

    /**
     * {@inheritDoc}
     */
    public function addPerson(\App\Entity\Person $person): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPerson', [$person]);

        return parent::addPerson($person);
    }

    /**
     * {@inheritDoc}
     */
    public function removePerson(\App\Entity\Person $person): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePerson', [$person]);

        return parent::removePerson($person);
    }

    /**
     * {@inheritDoc}
     */
    public function getMountDebit(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMountDebit', []);

        return parent::getMountDebit();
    }

    /**
     * {@inheritDoc}
     */
    public function setMountDebit(int $mountDebit): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMountDebit', [$mountDebit]);

        return parent::setMountDebit($mountDebit);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarte(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarte', []);

        return parent::getCarte();
    }

    /**
     * {@inheritDoc}
     */
    public function addCarte(\App\Entity\CarteBancaire $carte): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCarte', [$carte]);

        return parent::addCarte($carte);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCarte(\App\Entity\CarteBancaire $carte): \App\Entity\Account
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCarte', [$carte]);

        return parent::removeCarte($carte);
    }

}
